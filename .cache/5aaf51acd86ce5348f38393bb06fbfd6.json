{"id":"src/App/state/index.js","dependencies":[{"name":"/Users/Mikey/Programming/open-source/react-scaffold/package.json","includedInParent":true,"mtime":1534200257736},{"name":"/Users/Mikey/Programming/open-source/react-scaffold/.babelrc","includedInParent":true,"mtime":1534195938169},{"name":"redux","loc":{"line":1,"column":32},"parent":"/Users/Mikey/Programming/open-source/react-scaffold/src/App/state/index.js","resolved":"/Users/Mikey/Programming/open-source/react-scaffold/node_modules/redux/es/index.js"},{"name":"../../state/utils","parent":"/Users/Mikey/Programming/open-source/react-scaffold/src/App/state/index.js","resolved":"/Users/Mikey/Programming/open-source/react-scaffold/src/state/utils.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.appSpecs = exports.callApi = exports.CALL_API = undefined;\n\nvar _redux = require('redux');\n\nvar _utils = require('../../state/utils');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CALL_API = exports.CALL_API = 'CALL_API';\n\nvar callApi = exports.callApi = function callApi(config) {\n  return _defineProperty({}, CALL_API, config);\n};\n\n/**\n * This reducer is here in order to demonstrate inputting and retrieving state w/ redux.\n * Because it is only used in one view and does not change, a hard coded array in the\n * component that uses it normally would be plenty appropriate.\n *\n * When removing this reducer, don't forget to unregister it from redux.reducers\n */\nvar appSpecs = exports.appSpecs = (0, _utils.createReducer)(['react \\uD83D\\uDE18', 'redux \\uD83C\\uDF89', 'parcel', 'babel / es6', 'emotion'], {});\n\nexports.default = (0, _redux.combineReducers)({ appSpecs: appSpecs });","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/App/state/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"src/App/state/index.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"src/App/state/index.js","original":{"line":4,"column":7}},{"name":"CALL_API","generated":{"line":14,"column":4},"source":"src/App/state/index.js","original":{"line":4,"column":13}},{"generated":{"line":14,"column":34},"source":"src/App/state/index.js","original":{"line":4,"column":24}},{"generated":{"line":14,"column":44},"source":"src/App/state/index.js","original":{"line":4,"column":7}},{"generated":{"line":16,"column":0},"source":"src/App/state/index.js","original":{"line":6,"column":7}},{"name":"callApi","generated":{"line":16,"column":4},"source":"src/App/state/index.js","original":{"line":6,"column":13}},{"generated":{"line":16,"column":32},"source":"src/App/state/index.js","original":{"line":6,"column":23}},{"name":"callApi","generated":{"line":16,"column":41},"source":"src/App/state/index.js","original":{"line":6,"column":13}},{"generated":{"line":16,"column":48},"source":"src/App/state/index.js","original":{"line":6,"column":23}},{"generated":{"line":17,"column":0},"source":"src/App/state/index.js","original":{"line":6,"column":23}},{"name":"CALL_API","generated":{"line":17,"column":29},"source":"src/App/state/index.js","original":{"line":6,"column":37}},{"generated":{"line":17,"column":37},"source":"src/App/state/index.js","original":{"line":6,"column":23}},{"name":"config","generated":{"line":17,"column":39},"source":"src/App/state/index.js","original":{"line":6,"column":48}},{"generated":{"line":17,"column":45},"source":"src/App/state/index.js","original":{"line":6,"column":23}},{"generated":{"line":18,"column":0},"source":"src/App/state/index.js","original":{"line":6,"column":23}},{"generated":{"line":18,"column":1},"source":"src/App/state/index.js","original":{"line":6,"column":7}},{"generated":{"line":20,"column":0},"source":"src/App/state/index.js","original":{"line":8,"column":0}},{"generated":{"line":27,"column":0},"source":"src/App/state/index.js","original":{"line":15,"column":7}},{"name":"appSpecs","generated":{"line":27,"column":4},"source":"src/App/state/index.js","original":{"line":15,"column":13}},{"generated":{"line":27,"column":34},"source":"src/App/state/index.js","original":{"line":15,"column":24}},{"generated":{"line":27,"column":60},"source":"src/App/state/index.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":61},"source":"src/App/state/index.js","original":{"line":17,"column":4}},{"generated":{"line":27,"column":81},"source":"src/App/state/index.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":83},"source":"src/App/state/index.js","original":{"line":18,"column":4}},{"generated":{"line":27,"column":103},"source":"src/App/state/index.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":105},"source":"src/App/state/index.js","original":{"line":19,"column":4}},{"generated":{"line":27,"column":113},"source":"src/App/state/index.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":115},"source":"src/App/state/index.js","original":{"line":20,"column":4}},{"generated":{"line":27,"column":128},"source":"src/App/state/index.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":130},"source":"src/App/state/index.js","original":{"line":21,"column":4}},{"generated":{"line":27,"column":139},"source":"src/App/state/index.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":140},"source":"src/App/state/index.js","original":{"line":15,"column":24}},{"generated":{"line":27,"column":142},"source":"src/App/state/index.js","original":{"line":23,"column":2}},{"generated":{"line":27,"column":144},"source":"src/App/state/index.js","original":{"line":15,"column":24}},{"generated":{"line":27,"column":145},"source":"src/App/state/index.js","original":{"line":15,"column":7}},{"generated":{"line":29,"column":18},"source":"src/App/state/index.js","original":{"line":26,"column":15}},{"generated":{"line":29,"column":46},"source":"src/App/state/index.js","original":{"line":26,"column":31}},{"name":"appSpecs","generated":{"line":29,"column":48},"source":"src/App/state/index.js","original":{"line":26,"column":33}},{"generated":{"line":29,"column":66},"source":"src/App/state/index.js","original":{"line":26,"column":31}},{"generated":{"line":29,"column":68},"source":"src/App/state/index.js","original":{"line":26,"column":15}}],"sources":{"src/App/state/index.js":"import { combineReducers } from 'redux'\nimport { createReducer } from 'state/utils'\n\nexport const CALL_API = 'CALL_API'\n\nexport const callApi = config => ({ [CALL_API]: config })\n\n/**\n * This reducer is here in order to demonstrate inputting and retrieving state w/ redux.\n * Because it is only used in one view and does not change, a hard coded array in the\n * component that uses it normally would be plenty appropriate.\n *\n * When removing this reducer, don't forget to unregister it from redux.reducers\n */\nexport const appSpecs = createReducer(\n  [\n    'react \\uD83D\\uDE18',\n    'redux \\uD83C\\uDF89',\n    'parcel',\n    'babel / es6',\n    'emotion'\n  ],\n  {}\n)\n\nexport default combineReducers({ appSpecs })\n"},"lineCount":null}},"hash":"e44bad633aed6b5d40565080e48dfa1e","cacheData":{"env":{}}}