{"id":"73Eu","dependencies":[{"name":"/Users/Mikey/Programming/open-source/react-scaffold/node_modules/fbjs/package.json","includedInParent":true,"mtime":1534193414358},{"name":"/Users/Mikey/Programming/open-source/react-scaffold/package.json","includedInParent":true,"mtime":1534197905411},{"name":"/Users/Mikey/Programming/open-source/react-scaffold/.babelrc","includedInParent":true,"mtime":1534195938169},{"name":"./camelize","loc":{"line":14,"column":23},"parent":"/Users/Mikey/Programming/open-source/react-scaffold/node_modules/fbjs/lib/camelizeStyleName.js","resolved":"/Users/Mikey/Programming/open-source/react-scaffold/node_modules/fbjs/lib/camelize.js"}],"generated":{"js":"\"use strict\";var e=require(\"./camelize\"),r=/^-ms-/;function s(s){return e(s.replace(r,\"ms-\"))}module.exports=s;","map":{"mappings":[{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":12,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":14,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":14,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":14,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":14,"column":0},"generated":{"line":1,"column":27}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":16,"column":0},"generated":{"line":1,"column":41}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":16,"column":0},"generated":{"line":1,"column":43}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":35,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":35,"column":0},"generated":{"line":1,"column":60}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":35,"column":0},"generated":{"line":1,"column":62}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":72}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":74}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":76}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":36,"column":0},"generated":{"line":1,"column":86}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":39,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":39,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/fbjs/lib/camelizeStyleName.js","original":{"line":39,"column":0},"generated":{"line":1,"column":109}}],"sources":{"node_modules/fbjs/lib/camelizeStyleName.js":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;"},"lineCount":null}},"hash":"21be4e866963242633a163f747b7c33f","cacheData":{"env":{}}}