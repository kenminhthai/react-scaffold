{"id":"wSvn","dependencies":[{"name":"/Users/Mikey/Programming/open-source/react-scaffold/node_modules/fbjs/package.json","includedInParent":true,"mtime":1534193414358},{"name":"/Users/Mikey/Programming/open-source/react-scaffold/package.json","includedInParent":true,"mtime":1534197905411},{"name":"/Users/Mikey/Programming/open-source/react-scaffold/.babelrc","includedInParent":true,"mtime":1534195938169}],"generated":{"js":"\"use strict\";var e=/([A-Z])/g;function r(r){return r.replace(e,\"-$1\").toLowerCase()}module.exports=r;","map":{"mappings":[{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":14,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":14,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":14,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":28,"column":0},"generated":{"line":1,"column":30}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":28,"column":0},"generated":{"line":1,"column":39}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":28,"column":0},"generated":{"line":1,"column":41}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":29,"column":0},"generated":{"line":1,"column":44}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":29,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":29,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":29,"column":0},"generated":{"line":1,"column":61}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":29,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":29,"column":0},"generated":{"line":1,"column":70}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":32,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":32,"column":0},"generated":{"line":1,"column":91}},{"source":"node_modules/fbjs/lib/hyphenate.js","original":{"line":32,"column":0},"generated":{"line":1,"column":99}}],"sources":{"node_modules/fbjs/lib/hyphenate.js":"'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;"},"lineCount":null}},"hash":"d7d66ce3312ae7616674fdee375f7fba","cacheData":{"env":{}}}